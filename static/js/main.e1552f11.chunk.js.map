{"version":3,"sources":["components/SplitLayout.js","components/SizeWrapper.js","components/LogoGrid.js","components/FullScreenDropZone.js","components/ImageContainer.js","components/FlexMenu.js","components/SortableImageList.js","App.js","serviceWorker.js","index.js"],"names":["SplitLayout","state","globals","name","camelName","type","value","inputs","properties","values","active","switchGlobalValue","event","persist","globalIndex","parseInt","target","attributes","globalindex","nodeValue","_this","setState","concat","Object","toConsumableArray","slice","objectSpread","length","switchValue","inputIndex","inputindex","switch","index","this","map","property","console","log","input","global","react_default","a","createElement","className","React","cloneElement","props","children","imageOperations","bind","Component","SizeWrapper","wrapperName","id","style","display","width","height","PureComponent","LogoGrid","components_SizeWrapper","background","imageList","image","key","src","preview","alt","FullScreenDropZone","accept","dropzoneActive","onDragEnter","onDragLeave","onDrop","newImages","addImages","_this2","_this$state","es","disableClick","position","_ref","getRootProps","ImageContainer","deleteImage","URL","revokeObjectURL","filter","_","i","file","assign","createObjectURL","moveImage","oldIndex","newIndex","arrayMove","FlexMenu","exportedImage","export","html2canvas","document","getElementById","useCORS","then","onChange","propertyIndex","valueIndex","href","onClick","toDataURL","SortableItem","SortableElement","size","SortableList","SortableContainer","_ref2","items","SortableImageList","onSortEnd","_ref3","axis","pressDelay","App","components_ImageContainer","components_FullScreenDropZone","components_SplitLayout","components_SortableImageList","components_FlexMenu","components_LogoGrid","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1552f11.chunk.js","sourcesContent":["import React from 'react'\nimport '../App.css'\n\nclass SplitLayout extends React.Component {\n\n    state = {\n        globals: [\n            {\n                name: \"canvas width\",\n                camelName: \"width\",\n                type: \"text\",\n                value: \"100%\",   \n            },\n            {\n                name: \"canvas height\",\n                camelName: \"height\",\n                type: \"text\",\n                value: \"auto\",   \n            },\n        ],\n        inputs: [\n            {\n                name: \"flex-grow\",\n                camelName: \"flexGrow\",\n                type: \"number\",\n                value: 0,\n            },\n            {\n                name: \"flex-shrink\",\n                camelName: \"flexShrink\",\n                type: \"number\",\n                value: 1,\n            },\n            {\n                name: \"flex-basis\",\n                camelName: \"flexBasis\",\n                type: \"text\",\n                value: \"auto\",\n            },\n            {\n                name: \"width\",\n                camelName: \"width\",\n                type: \"text\",\n                value: \"100%\",\n            },\n            {\n                name: \"height\",\n                camelName: \"height\",\n                type: \"text\",\n                value: \"auto\",\n            },\n            {\n                name: \"padding\",\n                camelName: \"padding\",\n                type: \"text\",\n                value: \"5px\",\n            },\n            {\n                name: \"margin\",\n                camelName: \"margin\",\n                type: \"text\",\n                value: \"5px\",\n            },\n        ],\n        properties: [\n            {\n                name: \"flex-direction\",\n                camelName: \"flexDirection\",\n                values: [\n                    { value: \"row\" },\n                    { value: \"column\" },\n                    { value: \"row-reverse\" },\n                    { value: \"column-reverse\" },\n                ],\n                active: 0,\n            },\n            {\n                name: \"flex-wrap\",\n                camelName: \"flexWrap\",\n                values: [\n                    { value: \"nowrap\" },\n                    { value: \"wrap\" },\n                    { value: \"wrap-reverse\" },\n                ],\n                active: 0,\n            },\n            {\n                name: \"justify-content\",\n                camelName: \"justifyContent\",\n                values: [\n                    { value: \"flex-start\" },\n                    { value: \"flex-end\" },\n                    { value: \"center\" },\n                    { value: \"space-between\" },\n                    { value: \"space-around\" },\n                ],\n                active: 0,\n            },\n            {\n                name: \"align-items\",\n                camelName: \"alignItems\",\n                values: [\n                    { value: \"flex-start\" },\n                    { value: \"flex-end\" },\n                    { value: \"center\" },\n                    { value: \"baseline\" },\n                    { value: \"stretch\" },\n                ],\n                active: 0,\n            },\n            {\n                name: \"align-content\",\n                camelName: \"alignContent\",\n                values: [\n                    { value: \"flex-start\" },\n                    { value: \"flex-end\" },\n                    { value: \"center\" },\n                    { value: \"space-between\" },\n                    { value: \"space-around\" },\n                    { value: \"stretch\" },\n                ],\n                active: 0,\n            },\n        ]\n    }\n\n    switchGlobalValue = (event) => {\n        event.persist()\n        let globalIndex = parseInt(event.target.attributes.globalindex.nodeValue)\n        this.setState({\n            globals: [\n                ...this.state.globals.slice(0, globalIndex),\n                {...this.state.globals[globalIndex], value: event.target.value },\n                ...this.state.globals.slice(globalIndex + 1, this.state.inputs.length)\n            ]\n        })\n    }\n    switchValue = (event) => {\n        event.persist()\n        let inputIndex = parseInt(event.target.attributes.inputindex.nodeValue)\n        this.setState({\n            inputs: [\n                ...this.state.inputs.slice(0, inputIndex),\n                {...this.state.inputs[inputIndex], value: event.target.value },\n                ...this.state.inputs.slice(inputIndex + 1, this.state.inputs.length)\n            ]\n        })\n    }\n\n    switch = (index, value) => {\n        this.setState({\n            properties: [\n                ...this.state.properties.slice(0, index),\n                { ...this.state.properties[index], active: value },\n                ...this.state.properties.slice(index + 1)\n            ]\n        })\n    }\n\n    render() {\n        let properties = {}\n        this.state.properties.map(property => properties[property.camelName] = property.values[property.active].value)\n        let inputs = {}\n        console.log(inputs)\n        this.state.inputs.map(input => inputs[input.camelName] = input.value)\n        let globals = {}\n        console.log(inputs)\n        this.state.globals.map(global => globals[global.camelName] = global.value)\n        return (\n            <div>\n                <div className=\"topPanel\">\n                    {React.cloneElement(\n                        this.props.children[0],\n                        { imageOperations: this.props.imageOperations }\n                    )}\n                </div>\n                <div className=\"leftPanel\">\n                    {React.cloneElement(\n                        this.props.children[1],\n                        {\n                            switch: this.switch,\n                            switchValue: this.switchValue.bind(this),\n                            switchGlobalValue: this.switchGlobalValue.bind(this),\n                            properties: this.state.properties,\n                            inputs: this.state.inputs,\n                            globals: this.state.globals\n                        }\n                    )}\n                </div>\n                <div className=\"rightPanel\">\n                    {React.cloneElement(\n                        this.props.children[2],\n                        {\n                            imageOperations: this.props.imageOperations,\n                            properties: properties,\n                            inputs: inputs,\n                            globals: globals\n                        }\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SplitLayout","import React from 'react'\n\nclass SizeWrapper extends React.PureComponent {\n\n    render() {\n        let wrapperName = this.props.children.props.id + \"Wrapper\"\n        return (\n            <div className={wrapperName}>\n                <div style={{ display: \"table-row\" }} className={wrapperName + \" row\"}>\n                    <div style={{ display: \"table-cell\" }} className={wrapperName + \" corner\"}></div>\n                    <div style={{ display: \"table-cell\" }} className={wrapperName + \" width size\"}>\n                        <div className=\"size\">{this.props.width}</div>\n                    </div>\n                </div>\n                <div style={{ display: \"table-row\" }} className={wrapperName + \" row\"}>\n                    <div style={{ display: \"table-cell\" }} className={wrapperName + \" height size\"}>\n                        <div className=\"size\">{this.props.height}</div>\n                    </div>\n                    <div style={{ display: \"table-cell\" }} className={wrapperName + \" content\"}>\n                        {this.props.children}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nexport default SizeWrapper","import React from 'react'\nimport SizeWrapper from \"./SizeWrapper\"\n\nclass LogoGrid extends React.Component {\n    render() {\n        return (\n            <div className=\"logogrid\">\n                <SizeWrapper width={this.props.globals.width} height={this.props.globals.height}>\n                    <div className=\"canvas\" id=\"canvas\" style={{ ...this.props.properties, ...this.props.globals, display: \"flex\", background: \"white\" }}>\n                        {this.props.imageOperations.imageList.map(\n                            (image, index) => {\n                                return <img key={\"logo-\" + index} style={{ ...this.props.inputs }} src={image.preview} alt=\"\" />\n                            }\n                        )}\n                    </div>\n                </SizeWrapper>\n            </div>\n        )\n    }\n}\n\nexport default LogoGrid","import React from 'react'\nimport Dropzone from 'react-dropzone'\n\nclass FullScreenDropZone extends React.Component {\n    state = {\n        accept: 'image/*',\n        dropzoneActive: false\n    }\n\n    onDragEnter = () => this.setState({ dropzoneActive: true })\n    onDragLeave = () => this.setState({ dropzoneActive: false })\n    onDrop = (newImages) => {\n        this.props.imageOperations.addImages(newImages)\n        this.setState({ dropzoneActive: false })\n    }\n\n    render() {\n\n        const { accept, dropzoneActive } = this.state\n\n        return (\n            <Dropzone\n                disableClick\n                style={{ position: \"relative\" }}\n                accept={accept}\n                onDrop={this.onDrop}\n                onDragEnter={this.onDragEnter}\n                onDragLeave={this.onDragLeave}\n            >\n                {({ getRootProps }) => (\n                    <div {...getRootProps()}>\n\n                        {dropzoneActive && <div className=\"overlayStyle\">Drop files...</div>}\n\n                        <div>{React.cloneElement(\n                            this.props.children,\n                            { imageOperations: this.props.imageOperations }\n                        )}</div>\n\n                    </div>\n                )}\n            </Dropzone>\n        )\n    }\n}\n\nexport default FullScreenDropZone","import React from 'react'\nimport arrayMove from 'array-move'\n\nclass ImageContainer extends React.PureComponent {\n\n    state = {\n        imageList: []\n    }\n\n    deleteImage = (index) => {\n        URL.revokeObjectURL(this.state.imageList[index].preview)\n        this.setState({\n            imageList: this.state.imageList.filter((_, i) => i !== index)\n        })\n    }\n\n    addImages = (newImages) => {\n        newImages.map(file => Object.assign(file, { preview: URL.createObjectURL(file) }))\n        this.setState({ imageList: [...this.state.imageList, ...newImages] })\n        console.log(this.state.imageList)\n    }\n\n    moveImage = (oldIndex, newIndex) => {\n        if (oldIndex !== newIndex)\n            this.setState(\n                { imageList: arrayMove(this.state.imageList, oldIndex, newIndex) }, () => { console.log(this.state.imageList) }\n            )\n    }\n\n    render() {\n        return (\n            <div id=\"imageContainer\">\n                {React.cloneElement(\n                    this.props.children,\n                    {\n                        imageOperations: {\n                            deleteImage: this.deleteImage,\n                            addImages: this.addImages,\n                            moveImage: this.moveImage,\n                            imageList: this.state.imageList\n                        }\n                    }\n                )}\n            </div>\n        )\n    }\n}\nexport default ImageContainer","import React from 'react'\nimport html2canvas from 'html2canvas'\n\nclass FlexMenu extends React.Component {\n\n    state = {\n        exportedImage: \"\",\n    }\n\n    export = () => {\n        html2canvas(document.getElementById(\"canvas\"), {useCORS: true, }).then((image) => {\n            console.log(image)\n            this.setState({exportedImage: image})\n        })\n    }\n    render() {\n        return (\n            <div className=\"flexMenu\">\n                <table className=\"flexTable\">\n                    <tbody>\n                        {this.props.globals.map((global, globalIndex) => (\n                            <tr name={global.name} index={globalIndex} key={global.name}>\n                                <td>\n                                    <div className=\"globalName\">{global.name}</div>\n                                </td>\n                                <td>\n                                    <input globalindex={globalIndex} type={global.type} value={global.type === \"number\" ? parseInt(global.value) : global.value} onChange={this.props.switchGlobalValue} />\n                                </td>\n                            </tr>\n                        ))}\n                        {this.props.properties.map((property, propertyIndex) => (\n                            <tr name={property.name} index={propertyIndex} key={property.name}>\n                                <td>\n                                    <div className=\"propertyName\">{property.name}</div>\n                                </td>\n                                <td>\n                                    {property.values.map((value, valueIndex) => (\n                                        <span\n                                            name={value.value}\n                                            index={valueIndex}\n                                            key={property.name + '-' + value.value}\n                                            className={property.active === valueIndex ? \"propertyValue active\" : \"propertyValue\"}>\n                                            <a href=\"#\" onClick={() => this.props.switch(propertyIndex, valueIndex)}>{value.value}</a>\n                                        </span>\n                                    ))}\n                                </td>\n                            </tr>\n                        ))}\n                        {this.props.inputs.map((input, inputIndex) => (\n                            <tr name={input.name} index={inputIndex} key={input.name}>\n                                <td>\n                                    <div className=\"inputName\">{input.name}</div>\n                                </td>\n                                <td>\n                                    <input inputindex={inputIndex} type={input.type} value={input.type === \"number\" ? parseInt(input.value) : input.value} onChange={this.props.switchValue} />\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n                <input type=\"button\" onClick={() => this.export()} value=\"export as image\" />\n                <div className=\"exportedImageContainer\">\n                    <img src={this.state.exportedImage ? this.state.exportedImage.toDataURL() : \"\" } />\n                </div>\n            </div>\n        )\n    }\n}\nexport default FlexMenu","import React, { Component } from 'react'\nimport { SortableContainer, SortableElement } from 'react-sortable-hoc'\nimport '../App.css'\n\nconst SortableItem = SortableElement(\n    ({ value, index, deleteImage }) =>\n        <li className=\"img\" key={\"image-\" + index}>\n            <img src={value.preview} onClick={() => { deleteImage(index) }}\n                alt={value.name + \" - \" + value.size + \" bytes\"} />\n        </li>\n)\n\nconst SortableList = SortableContainer(({ items, deleteImage }) => {\n    return (\n        <ul className=\"imageList\">\n            {items.map((value, index) => (\n                <SortableItem key={`item-${index}`} index={index} value={value} deleteImage={deleteImage} />\n            ))}\n        </ul>\n    )\n})\n\nclass SortableImageList extends Component {\n\n    onSortEnd = ({ oldIndex, newIndex }) => {\n        console.log(this.props.imageList, oldIndex, newIndex)\n        this.props.imageOperations.moveImage(oldIndex, newIndex)\n    }\n    render() {\n        return (\n            <div>\n                <div className=\"titleBar\"><h1>LogoGrid</h1></div>\n                <SortableList\n                    axis={'xy'}\n                    pressDelay={50} \n                    imageOperations={this.props.imageOperations}\n                    items={this.props.imageOperations.imageList} \n                    onSortEnd={this.onSortEnd} \n                    deleteImage={this.props.imageOperations.deleteImage}\n                />\n                {this.props.imageOperations.imageList.length === 0 && <h2>Drop some images to start...</h2>}\n            </div>\n        )\n    }\n}\n\nexport default SortableImageList","import React from 'react';\nimport SplitLayout from './components/SplitLayout'\nimport LogoGrid from './components/LogoGrid'\nimport FullScreenDropZone from './components/FullScreenDropZone'\nimport ImageContainer from './components/ImageContainer'\nimport './App.css';\nimport FlexMenu from './components/FlexMenu';\nimport SortableImageList from './components/SortableImageList';\n\nfunction App() {\n  return (\n    <ImageContainer>\n      <FullScreenDropZone>\n        <SplitLayout>\n          <SortableImageList />\n          <FlexMenu />\n          <LogoGrid />\n        </SplitLayout>\n      </FullScreenDropZone>\n    </ImageContainer>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}